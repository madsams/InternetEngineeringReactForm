{"version":3,"sources":["serviceWorker.js","global/api.ts","theme.js","global/components/Header.tsx","global/actions/renderToast.ts","global/actions/request.ts","components/form/formActionTypes.ts","global/types.ts","components/form/formActions.ts","global/components/IsLoading.tsx","global/components/MyContainer.tsx","global/components/MyButton.tsx","components/form/formField/FormFeildInputText.tsx","components/form/formField/MapContainer.tsx","components/form/formField/FormLocationDialog.tsx","components/form/formField/FormFieldInputLocation.tsx","components/form/formField/FormFieldInputDate.tsx","components/form/formField/FormFieldInputSelect.tsx","components/form/formField/FormFeildInput.tsx","components/form/formField/FormError.tsx","components/form/formField/index.tsx","components/form/FormDetail.tsx","components/home/homeActionTypes.ts","components/form/FormContainer.tsx","components/form/index.tsx","components/home/HomeFormsListItem.tsx","components/home/HomeFormsList.tsx","components/home/homeActions.ts","components/home/HomeContainer.tsx","components/home/index.tsx","App.js","components/home/homeReducer.ts","components/form/formReducer.ts","store.js","index.js"],"names":["Boolean","window","location","hostname","match","api","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","Header","text","isHome","history","useHistory","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","goBack","Typography","toastTypes","toastrOptions","showCloseButton","closeOnToastrClick","renderToast","title","message","type","toastr","instance","Axios","create","baseURL","process","timeout","params","headers","interceptors","request","use","a","console","log","Promise","resolve","response","reject","FormActionTypes","requestOption","dispatch","method","data","url","toastTitle","successToastMessage","failToastMessage","errorCodes","pendingAction","errorAction","successAction","callback","SUCCESS","isCancelError","config","isCorsError","code","errorCodeActioned","status","forEach","errorCode","toastMessage","ERROR","action","fieldTypesEnum","getFormDetailSuccess","GET_FORM_DETAIL_SUCCESS","payload","getFormDetailPending","GET_FORM_DETAIL_PENDING","getFormDetailError","GET_FORM_DETAIL_ERROR","submitFormSuccess","SUBMIT_FORM_SUCCESS","submitFormPending","SUBMIT_FORM_PENDING","submitFormError","SUBMIT_FORM_ERROR","IsLoading","isLoading","children","CircularProgress","Fragment","MyContainer","className","Container","maxWidth","MyButton","Button","variant","FormFieldInputText","name","required","isNumber","value","onBlur","onChange","TextField","id","label","undefined","e","target","containerStyle","width","height","MapContainer","lat","lng","defaultCenter","googleMapsApiKey","mapContainerStyle","center","latLng","zoom","useStyles","makeStyles","createStyles","appBar","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","FormLocationDialog","save","open","onClose","classes","useState","setLat","setLng","Dialog","fullScreen","TransitionComponent","autoFocus","FormFieldInputLocation","setOpen","handleOpen","InputLabelProps","shrink","utils","DateFnsUtils","disableToolbar","format","invalidDateMessage","minDate","Date","date","KeyboardButtonProps","FormFieldInputSelect","options","FormControl","InputLabel","Select","labelId","event","map","option","MenuItem","key","button","FormFieldInput","FormFieldInputDate","Location","Text","Number","FormField","touched","FormError","getInitialState","fields","initialValue","reduce","obj","field","HomeActionTypes","FormDetail","submitForm","submitIsLoading","values","setValues","errors","setErrors","setTouched","getHandleError","preErrors","getHandleTouched","preTouched","getHandleChange","preValues","useEffect","clearState","item","isOk","filter","mapDispatchToProps","getFormDetail","forms","connect","state","formDetailIsLoading","formDetail","submitFormIsLoading","formTitle","formId","formFields","useParams","Form","HomeFormsListItem","ListItem","component","href","ListItemText","HomeFormsList","List","getFormsSuccess","GET_FORMS_SUCCESS","getFormsPending","GET_FORMS_PENDING","getFormsError","GET_FORMS_ERROR","getForms","formsData","formsList","formsIsLoading","Home","App","path","formsListInitialState","submitFormsInitialState","reducer","combineReducers","toastrReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","timeOut","getState","transitionIn","transitionOut","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cd6a21ba.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","enum api {\n    forms = '/api/forms',\n}\n\nexport default api\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {useHistory} from 'react-router-dom';\n\ninterface Props {\n    text: string;\n    isHome?: boolean;\n}\n\nconst Header = ({text, isHome}: Props) => {\n    const history = useHistory();\n\n    return <AppBar position=\"sticky\">\n        <Toolbar>\n            {!isHome && <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={history.goBack}>\n                <ArrowBackIcon/>\n            </IconButton>}\n\n            <Typography>\n                {text}\n            </Typography>\n        </Toolbar>\n    </AppBar>;\n};\n\nexport default Header\n","import {toastr} from 'react-redux-toastr'\n\nconst toastrOptions = {\n    showCloseButton: false,\n    closeOnToastrClick: true\n};\n\nexport enum toastTypes {\n    LIGHT = 'light',\n    MESSAGE = 'message',\n    INFO = 'info',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ERROR = 'error'\n}\n\nconst renderToast = (title: string, message: string, type: toastTypes) => toastr[type](title, message, toastrOptions);\nexport default renderToast\n","import Axios from \"axios\";\nimport renderToast, {toastTypes} from \"./renderToast\";\nimport {requestOptionType, thunkActionType} from \"../types\";\n\nconst instance = Axios.create({\n    baseURL: process.env.REACT_APP_HOST,\n    timeout: 7000,\n    params: {},\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n});\n\ninstance.interceptors.request.use((async request => {\n        console.log('>>>>>>>>>>>>', request);\n        return Promise.resolve(request);\n    }\n));\n\ninstance.interceptors.response.use(response => {\n    console.log('<<<<<<<<<<<', response);\n    return Promise.resolve(response);\n}, async error => {\n    console.log('<<<<<<error<<<<<', error.response ? {...error.response} : {...error});//cancel and network error have no response\n    return Promise.reject(error);\n});\n\n\nconst request: thunkActionType = (requestOption: requestOptionType) =>\n    async (dispatch: any) => {\n        const {\n            method,\n            data = {},\n            params = {},\n            url,\n            timeout = 7 * 1000,\n            headers,\n            toastTitle = '',\n            successToastMessage,\n            failToastMessage = 'لطفا اتصال خود را بررسی کنید',\n            errorCodes = [],\n            resolve,\n            reject,\n            pendingAction,\n            errorAction,\n            successAction,\n            callback\n        } = requestOption;\n\n        // Start loading\n        if (pendingAction)\n            dispatch(pendingAction());\n\n        try {\n            // Calls \"url\" by \"method\" with \"data\" as body and \"headers\" and params\n            const response = await instance.request({url, method, headers, data, timeout, params});\n\n            // If axios call was successful\n            if (resolve)\n                resolve(response);\n            if (successAction)\n                dispatch(successAction(response.data.data));\n            if (successToastMessage)\n                renderToast(toastTitle, successToastMessage, toastTypes.SUCCESS);\n\n        } catch (error) {\n            // Component unmounted and axios unsubscribed\n            const isCancelError = !error.config;\n            // Cross-Origin error\n            const isCorsError = !error.response;\n            // Econnaborted because of connection lost or vpn\n            const isEconnabortedError = error.code === \"ECONNABORTED\";\n\n            if (isEconnabortedError) {\n                if (errorAction)\n                    dispatch(errorAction(failToastMessage))\n            } else if (!isCancelError) {\n                // Error codes are\n                let errorCodeActioned = false;\n\n                if (!isCorsError) {\n                    const code = error.response.status;\n\n                    errorCodes.forEach(errorCode => {\n                        if (code === errorCode.code && !errorCodeActioned) {\n                            if (errorCode.toastMessage)\n                                renderToast(toastTitle, errorCode.toastMessage, toastTypes.ERROR);\n                            if (errorCode.action)\n                                errorCode.action(error);\n                            errorCodeActioned = true;\n                        }\n                    });\n                }\n\n                if (!errorCodeActioned) {\n                    if (!reject) {\n                        if (errorAction)\n                            dispatch(errorAction(failToastMessage));\n                        renderToast(toastTitle, failToastMessage, toastTypes.ERROR);\n                    } else {\n                        reject(error);\n                    }\n                }\n            }\n        }\n        if (callback)\n            callback()\n    }\n;\nexport default request\n","enum FormActionTypes {\n    GET_FORM_DETAIL_SUCCESS = 'GET_FORM_DETAIL_SUCCESS',\n    GET_FORM_DETAIL_PENDING = 'GET_FORM_DETAIL_PENDING',\n    GET_FORM_DETAIL_ERROR = 'GET_FORM_DETAIL_ERROR',\n    SUBMIT_FORM_SUCCESS = 'SUBMIT_FORM_SUCCESS',\n    SUBMIT_FORM_PENDING = 'SUBMIT_FORM_PENDING',\n    SUBMIT_FORM_ERROR = 'SUBMIT_FORM_ERROR',\n}\n\nexport default FormActionTypes\n","import {Method as axiosMethods} from \"axios\";\nimport HomeActionTypes from \"../components/home/homeActionTypes\";\nimport FormActionTypes from \"../components/form/formActionTypes\";\n\nexport type mapStateType = (state: any) => object\nexport type mapDispatchType = object\n\nexport interface reduxActionType {\n    type: HomeActionTypes | FormActionTypes,\n    payload?: any,\n    meta?: any\n}\n\nexport type normalActionType = (...args: any) => reduxActionType;\nexport type thunkActionType = (...args: any) => (dispatch: any, getState: any) => void;\n\nexport interface errorCodesType {\n    code: number,\n    toastMessage?: string,\n\n    action?(error?: any): void\n}\n\nexport interface requestOptionType {\n    method: axiosMethods;\n    data?: object;\n    params?: object;\n    url: string;\n    timeout?: number;\n    headers?: object;\n    toastTitle?: string;\n    successToastMessage?: string;\n    failToastMessage?: string;\n    errorCodes?: Array<errorCodesType>;\n    successAction: thunkActionType;\n    errorAction: thunkActionType;\n    pendingAction: thunkActionType;\n\n    callback?(): void;\n\n    resolve(response?: object): () => void;\n\n    reject(error?: any): () => void;\n}\n\nexport interface optionType {\n    label: string;\n    value: any;\n}\n\nexport enum fieldTypesEnum {\n    Text = 'Text',\n    Number = 'Number',\n    Location = 'Location',\n    Date = 'Date',\n}\n\nexport interface fieldType {\n    name: string;\n    title: string;\n    type: fieldTypesEnum;\n    required?: boolean;\n    options?: Array<optionType>;\n}\n\nexport interface formType {\n    title: string;\n    id: number;\n    fields: Array<fieldType>\n}\n\nexport type latLng = { lat: number; lng: number; };\n\nexport type IFormInputValuesType = string | number | latLng | Date | null;\n\nexport interface IFormInputPropsType extends fieldType {\n    value: IFormInputValuesType;\n\n    onBlur(): void;\n\n    onChange(value: IFormInputValuesType): void;\n}\n\nexport interface IFormFieldPropsType extends IFormInputPropsType {\n    error: string | null;\n    touched: boolean;\n}\n\n","import {formType, normalActionType, thunkActionType} from \"../../global/types\";\nimport api from \"../../global/api\";\nimport {request} from \"../../global/actions/index\";\nimport FormActionTypes from \"./formActionTypes\";\nimport {valuesType} from \"./FormDetail\";\n\nexport const getFormDetail: thunkActionType = (id: number) => dispatch => {\n    dispatch(request({\n        method: 'get',\n        url: `${api.forms}/${id}`,\n        successAction: getFormDetailSuccess,\n        errorAction: getFormDetailError,\n        pendingAction: getFormDetailPending\n    }))\n};\n\nconst getFormDetailSuccess: normalActionType = (data: formType) => ({\n    type: FormActionTypes.GET_FORM_DETAIL_SUCCESS,\n    payload: data\n});\nconst getFormDetailPending: normalActionType = () => ({\n    type: FormActionTypes.GET_FORM_DETAIL_PENDING,\n});\nconst getFormDetailError: normalActionType = () => ({\n    type: FormActionTypes.GET_FORM_DETAIL_ERROR,\n});\n\nexport const submitForm: thunkActionType = (id: number, data: valuesType, callback: () => void) => dispatch => {\n    dispatch(request({\n        url: `${api.forms}/${id}`,\n        method: 'post',\n        data,\n        successAction: submitFormSuccess,\n        errorAction: submitFormError,\n        pendingAction: submitFormPending,\n        callback\n    }))\n};\n\nconst submitFormSuccess: normalActionType = () => ({\n    type: FormActionTypes.SUBMIT_FORM_SUCCESS,\n});\nconst submitFormPending: normalActionType = () => ({\n    type: FormActionTypes.SUBMIT_FORM_PENDING,\n});\nconst submitFormError: normalActionType = () => ({\n    type: FormActionTypes.SUBMIT_FORM_ERROR,\n});\n","import {CircularProgress} from \"@material-ui/core\";\nimport React, {ReactNode} from \"react\";\n\ninterface Props {\n    isLoading: boolean;\n    children: ReactNode\n}\n\nconst IsLoading = ({isLoading, children}: Props) =>\n    isLoading ?\n        <CircularProgress/> :\n        <React.Fragment>\n            {children}\n        </React.Fragment>;\n\nexport default IsLoading\n","import React, {ReactNode} from \"react\";\nimport {Container} from '@material-ui/core';\n\ninterface PropsType {\n    children: ReactNode\n}\n\nconst MyContainer = ({children}: (PropsType & any)) =>\n    <div className='flex-1 justify-content-center bg-light'>\n        <Container maxWidth='md' className='mt-4'>\n            {children}\n        </Container>\n    </div>;\nexport default MyContainer\n\n","import {Button, CircularProgress, PropTypes} from \"@material-ui/core\";\nimport React, {ReactNode} from \"react\";\n\ninterface Props {\n    isLoading: boolean;\n    children: ReactNode;\n    className?: string;\n    color?: PropTypes.Color;\n\n    onClick(...args: any): void;\n}\n\nconst MyButton = ({isLoading, children, onClick, className, color = \"primary\"}: Props) =>\n    isLoading ?\n        <CircularProgress/> :\n        <Button\n            color={color}\n            variant=\"contained\"\n            className={'m-1 mt-5 align-self-start col-5 ' + className}\n            onClick={onClick}\n        >\n            {children}\n        </Button>;\n\nexport default MyButton\n","import {IFormInputPropsType} from \"../../../global/types\";\nimport React from \"react\";\nimport {TextField} from '@material-ui/core';\n\ninterface PropsType extends IFormInputPropsType {\n    isNumber?: boolean;\n    value: string | number;\n\n    onChange(value: string | number | null): void;\n}\n\nconst FormFieldInputText = ({name, required, title, isNumber, value, onBlur, onChange}: PropsType) => {\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => onChange(e.target.value);\n    return <TextField\n        id={name}\n        required={required}\n        label={title}\n        value={value}\n        type={isNumber ? \"number\" : undefined}\n        onBlur={onBlur}\n        onChange={handleChange}\n    />;\n};\nexport default FormFieldInputText\n","import React from \"react\";\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\n\nconst containerStyle = {width: '100vw', height: '100vh'};\n\ninterface PropsType {\n    lat: number;\n    lng: number;\n\n    onClick(lat: number, lng: number): void;\n\n    defaultCenter: { lat: number; lng: number; }\n}\n\nconst MapContainer = ({lat, lng, onClick, defaultCenter}: PropsType) => {\n    const handleClick = ({latLng}: any) => onClick(latLng.lat(), latLng.lng());\n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\">\n            <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={defaultCenter}\n                onClick={handleClick}\n                zoom={12}\n            >\n                <Marker position={{lat, lng}}/>\n            </GoogleMap>\n        </LoadScript>\n    );\n};\n\nexport default MapContainer\n","import React, {useState} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport {TransitionProps} from '@material-ui/core/transitions';\nimport MapContainer from \"./MapContainer\";\nimport {latLng} from \"../../../global/types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    }),\n);\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst defaultCenter = {lat: 35.8037, lng: 51.3940};\n\ninterface PropsType {\n    open: boolean;\n\n    onClose(): void;\n\n    save(location: latLng): void;\n}\n\nconst FormLocationDialog = ({save, open, onClose}: PropsType) => {\n    const classes = useStyles();\n\n    const [lat, setLat] = useState(defaultCenter.lat);\n    const [lng, setLng] = useState(defaultCenter.lng);\n\n    const onLocationChanged = (lat: number, lng: number) => {\n        setLat(lat);\n        setLng(lng);\n    };\n\n    const handleSave = () => {\n        save({lat, lng});\n        onClose();\n    };\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n                        <CloseIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Location\n                    </Typography>\n                    <Button autoFocus color=\"inherit\" onClick={handleSave}>\n                        save\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <MapContainer lat={lat} lng={lng} onClick={onLocationChanged} defaultCenter={defaultCenter}/>\n        </Dialog>\n    );\n};\nexport default FormLocationDialog\n","import React from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport FormLocationDialog from './FormLocationDialog'\nimport {IFormInputPropsType, latLng} from \"../../../global/types\";\n\ninterface PropsType extends IFormInputPropsType {\n    value: latLng | null;\n}\n\nconst FormFieldInputLocation = ({name, title, value, required, onBlur, onChange}: PropsType) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        handleOpen();\n        onBlur();\n    };\n\n    const handleOpen = () => setOpen(true);\n\n    const handleClose = () => setOpen(false);\n\n    return (\n        <>\n            <TextField\n                required={required}\n                InputLabelProps={{shrink: (!!value)}}\n                label={title}\n                id={name}\n                value={value && `(${value.lat} ${value.lng})`}\n                onClick={handleClick}\n            />\n            <FormLocationDialog save={onChange} onClose={handleClose} open={open}/>\n        </>\n    );\n};\nexport default FormFieldInputLocation\n","import 'date-fns';\nimport {IFormInputPropsType} from \"../../../global/types\";\nimport React from \"react\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\ninterface PropsType extends IFormInputPropsType {\n    value: Date | null;\n\n    onChange(value: Date | null): void;\n}\n\nconst dateFormat = \"yyyy/MM/dd\";\n\nconst FormFieldInputText = ({name, required, title, value, onChange, onBlur}: PropsType) => {\n    const handleDateChange = (date: Date | null) => {\n        onChange(date);\n    };\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                required={required}\n                disableToolbar\n                variant=\"inline\"\n                format={dateFormat}\n                id={name}\n                label={title}\n                value={value}\n                onBlur={onBlur}\n                invalidDateMessage={`Date Format is ${dateFormat}`}\n                minDate={new Date('0000-00-00')}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </MuiPickersUtilsProvider>);\n};\nexport default FormFieldInputText\n","import {IFormInputPropsType, optionType} from \"../../../global/types\";\nimport React from \"react\";\nimport {FormControl, InputLabel, MenuItem, Select} from '@material-ui/core';\n\ninterface PropsType extends IFormInputPropsType {\n    options: Array<optionType>;\n}\n\nconst FormFieldInputSelect = ({name, title, value, required, onChange, onBlur, options}: PropsType) => {\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => onChange(event.target.value as string);\n\n    return <FormControl>\n        <InputLabel id={name + 'label'}>{title}</InputLabel>\n        <Select\n            required={required}\n            labelId={name + 'label'}\n            id={name}\n            value={value}\n            onBlur={onBlur}\n            onChange={handleChange}\n        >\n            {options.map(option =>\n                <MenuItem key={option.value} value={option.value} button={false}>{option.label}</MenuItem>\n            )}\n        </Select>\n    </FormControl>;\n};\nexport default FormFieldInputSelect\n","import {fieldTypesEnum, IFormInputPropsType, latLng} from \"../../../global/types\";\nimport React from \"react\";\nimport FormFieldInputText from \"./FormFeildInputText\";\nimport FormFieldInputLocation from \"./FormFieldInputLocation\";\nimport FormFieldInputDate from \"./FormFieldInputDate\"\nimport FormFieldInputSelect from \"./FormFieldInputSelect\";\n\nconst FormFieldInput = ({...props}: IFormInputPropsType) => {\n    if (props.options)\n        return <FormFieldInputSelect  {...props} options={props.options}/>;\n\n    switch (props.type) {\n        case fieldTypesEnum.Date:\n            return <FormFieldInputDate  {...props} value={props.value as Date | null}/>;\n        case fieldTypesEnum.Location:\n            return <FormFieldInputLocation  {...props} value={props.value as latLng | null}/>;\n        case fieldTypesEnum.Text:\n            return <FormFieldInputText   {...props} value={props.value as string | number}/>;\n        case fieldTypesEnum.Number:\n            return <FormFieldInputText  {...props} value={props.value as string | number} isNumber/>;\n        default:\n            return null;\n    }\n};\n\nexport default FormFieldInput\n","import React from \"react\";\nimport {Typography} from \"@material-ui/core\";\n\ninterface PropsType {\n    error: string | null;\n    touched: boolean;\n}\n\nconst FormField = ({touched, error}: PropsType) =>\n    (touched && error) ? <Typography variant='caption' color='error'>* {error}</Typography> : null;\n\nexport default FormField;\n","import {IFormFieldPropsType} from \"../../../global/types\";\nimport React from \"react\";\nimport FormFieldInput from \"./FormFeildInput\";\nimport FormError from \"./FormError\";\n\nconst FormField = ({error, touched, ...props}: IFormFieldPropsType) =>\n    <>\n        <FormFieldInput {...props}/>\n        <FormError error={error} touched={touched}/>\n    </>;\n\nexport default FormField\n","import React, {useEffect, useState} from \"react\";\nimport {fieldType, IFormInputValuesType} from \"../../global/types\";\nimport FormField from './formField';\nimport {MyButton} from \"../../global/components\";\n\nexport type valuesType = {\n    [key: string]: IFormInputValuesType;\n}\n\ninterface PropsType {\n    fields: Array<fieldType>;\n    submitIsLoading: boolean;\n\n    submitForm(data: valuesType, callback: (...args: any) => void): void;\n}\n\ntype errorType = {\n    [key: string]: string | null;\n}\n\ntype touchedType = {\n    [key: string]: boolean;\n}\n\n\nfunction getInitialState(fields: Array<fieldType>, initialValue: any) {\n    return fields.reduce((obj, field) => ({\n        ...obj,\n        [field.name]: initialValue\n    }), {});\n}\n\nconst FormDetail = ({fields, submitForm, submitIsLoading}: PropsType) => {\n    const [values, setValues] = useState<valuesType>(getInitialState(fields, null));\n    const [errors, setErrors] = useState<errorType>(getInitialState(fields, null));\n    const [touched, setTouched] = useState<touchedType>(getInitialState(fields, false));\n\n    const getHandleError = (name: string) => (error: string | null) =>\n        setErrors(preErrors => ({\n            ...preErrors,\n            [name]: error\n        }));\n    const getHandleTouched = (name: string) => () =>\n        setTouched(preTouched => ({\n            ...preTouched,\n            [name]: true\n        }));\n    const getHandleChange = (name: string) => (value: IFormInputValuesType) => {\n        setValues(preValues => ({\n            ...preValues,\n            [name]: value\n        }));\n        getHandleError(name)(null);\n    };\n\n    useEffect(() => {\n        console.log(errors);\n        console.log(touched);\n        console.log(values);\n    }, [values, touched, errors]);\n\n    const clearState = () => {\n        setValues(getInitialState(fields, null));\n        setErrors(getInitialState(fields, null));\n        setTouched(getInitialState(fields, false));\n    };\n\n    const submit = () => {\n        let isOk = true;\n        fields\n            .filter(item => item.required)\n            .map(item => item.name)\n            .filter(name => !values[name])\n            .forEach(name => {\n                isOk = false;\n                getHandleTouched(name)();\n                getHandleError(name)('required')\n            });\n\n        if (isOk) {\n            submitForm(values, clearState);\n        }\n    };\n\n    return (\n        <div className='flex-1 flex-column'>\n            {fields.map(({name, ...item}) =>\n                <FormField\n                    {...item}\n                    name={name}\n                    key={name}\n                    touched={touched[name]}\n                    value={values[name]}\n                    error={errors[name]}\n                    onBlur={getHandleTouched(name)}\n                    onChange={getHandleChange(name)}\n                />\n            )}\n\n            <MyButton onClick={submit} isLoading={submitIsLoading}>\n                Submit\n            </MyButton>\n        </div>\n    );\n};\n\nexport default FormDetail\n\n","enum HomeActionTypes {\n    GET_FORMS_SUCCESS = 'GET_FORMS_SUCCESS',\n    GET_FORMS_ERROR = 'GET_FORMS_ERROR',\n    GET_FORMS_PENDING = 'GET_FORMS_PENDING',\n}\n\nexport default HomeActionTypes;\n","import React, {useEffect} from \"react\";\nimport {fieldType, mapDispatchType, mapStateType, thunkActionType} from \"../../global/types\";\nimport {getFormDetail, submitForm} from \"./formActions\";\nimport {connect} from \"react-redux\";\nimport {IsLoading, MyContainer} from \"../../global/components\";\nimport {useParams} from \"react-router\";\nimport {Container, Typography} from \"@material-ui/core\";\nimport FormDetail, {valuesType} from \"./FormDetail\";\n\ninterface PropsType {\n    formDetailIsLoading: boolean;\n    formTitle: string;\n    formId: number;\n    formFields: Array<fieldType>;\n    getFormDetail: thunkActionType;\n    submitForm: thunkActionType;\n    submitFormIsLoading: boolean;\n}\n\nconst FormContainer = ({formDetailIsLoading, submitFormIsLoading, formTitle, formId, formFields, getFormDetail, submitForm}: (PropsType & any)) => {\n    const {id} = useParams();\n\n    useEffect(() => {\n        getFormDetail(id);\n    }, [getFormDetail, id]);\n\n    const handleSubmit = (data: valuesType, callback: () => void) => submitForm(id, data, callback);\n\n    return (\n        <MyContainer>\n            <IsLoading isLoading={formDetailIsLoading || submitFormIsLoading}>\n                <Container maxWidth='xs' className='d-flex flex-column align-items-stretch ml-0'>\n\n                    <Typography variant='h5'>\n                        {`${formTitle} \"${formId}\"`}\n                    </Typography>\n                    <FormDetail fields={formFields} submitForm={handleSubmit} submitIsLoading={submitFormIsLoading}/>\n                </Container>\n            </IsLoading>\n        </MyContainer>\n    );\n};\n\nconst mapStateToProps: mapStateType = (state) => ({\n    formDetailIsLoading: state.formDetail.isLoading,\n    submitFormIsLoading: state.submitForm.isLoading,\n    formTitle: state.formDetail.title,\n    formId: state.formDetail.id,\n    formFields: state.formDetail.fields\n});\nconst mapDispatchToProps: mapDispatchType = {getFormDetail, submitForm};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer)\n","import React from \"react\";\nimport Header from \"../../global/components/Header\";\nimport FormContainer from \"./FormContainer\";\nimport {useParams} from \"react-router\";\n\nconst Form = () => {\n    const {id} = useParams();\n\n    return <>\n        <Header text={`Form ${id}`}/>\n        <FormContainer/>\n    </>;\n};\nexport default Form\n","import React from \"react\";\nimport {ListItem, ListItemText, Typography} from \"@material-ui/core\";\nimport {formType} from \"../../global/types\";\n\ninterface PropsType {\n    item: formType;\n}\n\nconst HomeFormsListItem = ({item}: PropsType) =>\n    <ListItem button component=\"a\"  href={`/form/${item.id}`}>\n        <ListItemText className='position-absolute'>\n            <Typography variant='overline'>\n                {item.id}:\n            </Typography>\n        </ListItemText>\n        <ListItemText>\n            <Typography className='text-center'>\n                {item.title}\n            </Typography>\n        </ListItemText>\n    </ListItem>;\n\nexport default HomeFormsListItem\n","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport {formType} from \"../../global/types\";\nimport HomeFormsListItem from \"./HomeFormsListItem\";\n\ninterface PropsType {\n    data: Array<formType>;\n}\n\nconst HomeFormsList = ({data}: PropsType) =>\n    <List component=\"nav\" className='border'>\n        {data.map(item => <HomeFormsListItem key={item.id} item={item}/>)}\n    </List>;\n\nexport default HomeFormsList\n","import {formType, normalActionType, thunkActionType} from \"../../global/types\";\nimport api from \"../../global/api\";\nimport {request} from \"../../global/actions/index\";\nimport HomeActionTypes from \"./homeActionTypes\";\n\nexport const getForms: thunkActionType = () => dispatch => {\n    dispatch(request({\n        method: 'get',\n        url: api.forms,\n        successAction: getFormsSuccess,\n        errorAction: getFormsError,\n        pendingAction: getFormsPending\n    }))\n};\n\nconst getFormsSuccess: normalActionType = (data: Array<formType>) => ({\n    type: HomeActionTypes.GET_FORMS_SUCCESS,\n    payload: data\n});\nconst getFormsPending: normalActionType = () => ({\n    type: HomeActionTypes.GET_FORMS_PENDING,\n});\nconst getFormsError: normalActionType = () => ({\n    type: HomeActionTypes.GET_FORMS_ERROR,\n});\n","import React, {useEffect} from \"react\";\nimport {formType, mapDispatchType, mapStateType, thunkActionType} from \"../../global/types\";\nimport HomeFormsList from \"./HomeFormsList\";\nimport {getForms} from \"./homeActions\";\nimport {connect} from \"react-redux\";\nimport {IsLoading, MyContainer} from \"../../global/components\";\nimport {Typography} from \"@material-ui/core\";\n\ninterface PropsType {\n    getForms: thunkActionType;\n    formsData: Array<formType>;\n    formsIsLoading: boolean;\n}\n\nconst HomeContainer = ({getForms, formsData, formsIsLoading}: (PropsType & any)) => {\n    useEffect(() => {\n        getForms();\n    }, [getForms]);\n\n    return (\n        <MyContainer>\n            <div className='flex-1 flex-column align-items-center m-2'>\n                <Typography variant='h4'>\n                    List of forms\n                </Typography>\n                <br/>\n                <Typography variant='subtitle1'>\n                    Click on one of them to be redirected to the relevant form\n                </Typography>\n                <br/>\n            </div>\n\n            <IsLoading isLoading={formsIsLoading}>\n                <HomeFormsList data={formsData}/>\n            </IsLoading>\n        </MyContainer>\n    );\n};\n\nconst mapStateToProps: mapStateType = (state) => ({\n    formsData: state.formsList.data,\n    formsIsLoading: state.formsList.isLoading,\n});\nconst mapDispatchToProps: mapDispatchType = {getForms};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer)\n","import React from \"react\";\nimport Header from \"../../global/components/Header\";\nimport HomeContainer from \"./HomeContainer\";\n\nconst Home = () =>\n    <>\n        <Header text='Home' isHome/>\n        <HomeContainer />\n    </>;\n\nexport default Home\n\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Form, Home} from \"./components\";\n\nconst App = () =>\n    <Router>\n        <Switch>\n            <Route path=\"/form/:id\" component={Form}/>\n            <Route path=\"/\" component={Home}/>\n        </Switch>\n    </Router>;\n\nexport default App;\n","import HomeActionTypes from \"./homeActionTypes\";\nimport {formType, reduxActionType} from \"../../global/types\";\n\ninterface FormsListStateType {\n    isLoading: boolean;\n    data: Array<formType>;\n}\n\nconst formsListInitialState: FormsListStateType = {\n    isLoading: false,\n    data: []\n};\n\nexport const formsListReducer = (state = formsListInitialState, action: reduxActionType) => {\n    switch (action.type) {\n        case HomeActionTypes.GET_FORMS_PENDING:\n            return {...state, isLoading: true};\n        case HomeActionTypes.GET_FORMS_ERROR:\n            return {...state, isLoading: false};\n        case HomeActionTypes.GET_FORMS_SUCCESS:\n            return {data: action.payload, isLoading: false};\n        default:\n            return state;\n    }\n};\n","import {formType, reduxActionType} from \"../../global/types\";\nimport FormActionTypes from \"./formActionTypes\";\n\ninterface isLoadingType {\n    isLoading: boolean;\n}\n\nconst formsListInitialState: formType & isLoadingType = {\n    isLoading: false,\n    title: '',\n    id: 0,\n    fields: []\n};\n\nexport const formDetailReducer = (state = formsListInitialState, action: reduxActionType) => {\n    switch (action.type) {\n        case FormActionTypes.GET_FORM_DETAIL_PENDING:\n            return {...state, isLoading: true};\n        case FormActionTypes.GET_FORM_DETAIL_ERROR:\n            return {...state, isLoading: false};\n        case FormActionTypes.GET_FORM_DETAIL_SUCCESS:\n            return {...action.payload, isLoading: false};\n        default:\n            return state;\n    }\n};\n\nconst submitFormsInitialState: isLoadingType = {\n    isLoading: false\n};\n\nexport const submitFormReducer = (state = submitFormsInitialState, action: reduxActionType) => {\n    switch (action.type) {\n        case FormActionTypes.SUBMIT_FORM_PENDING:\n            return {isLoading: true};\n        case FormActionTypes.SUBMIT_FORM_ERROR:\n            return {isLoading: false};\n        case FormActionTypes.SUBMIT_FORM_SUCCESS:\n            return {isLoading: false};\n        default:\n            return state;\n    }\n};\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {reducer as toastrReducer} from 'react-redux-toastr'\nimport thunk from 'redux-thunk';\nimport {formsListReducer} from \"./components/home/homeReducer\";\nimport {formDetailReducer, submitFormReducer} from \"./components/form/formReducer\";\n// import {logger} from \"redux-logger/src\";\n\nconst reducer = combineReducers({\n    formsList: formsListReducer,\n    formDetail: formDetailReducer,\n    submitForm: submitFormReducer,\n    toastr: toastrReducer\n});\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(\n        thunk,\n    )\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport theme from \"./theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport store from \"./store\";\nimport ReduxToastr from \"react-redux-toastr\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Provider store={store}>\n                <App/>\n                <ReduxToastr\n                    timeOut={3000}\n                    position=\"top-right\"\n                    getState={state => state.toastr}\n                    transitionIn=\"fadeIn\"\n                    transitionOut=\"fadeOut\"\n                    closeOnToastrClick\n                />\n            </Provider>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}